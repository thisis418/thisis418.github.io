import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{f as v,a as l,b as s,s as a,n as g,t as w}from"../chunks/B1HoO4k0.js";import{H as Pa}from"../chunks/VyKLllFE.js";/* empty css                *//* empty css                */import{P as i}from"../chunks/B8FEnsbH.js";import{M as _}from"../chunks/e5qaD0UW.js";import"../chunks/i9XClpbl.js";/* empty css                */import{S as wa}from"../chunks/D2QCM4hc.js";import{P as y}from"../chunks/ClksMsit.js";import{T as Sa}from"../chunks/CcX1cm_-.js";import{C as r}from"../chunks/0Rd6UPhr.js";var Ha=v(`<b>Регистры</b> &mdash; поля во внутрипроцессорной сверхбыстрой оперативной памяти.
    Размер регистров очень маленький, их количество сильно ограничено, потому что они безумно дорогие.
    Но при этом доступ к ним осуществляется гораздо быстрее,
    примерно за <!> такт, это где-то <!> &ndash; <!> нс.`,1),Ma=v(`<b>Регистры общего назначения</b> &mdash; регистры, которые можно использовать как угодно.
    Эти регистры полностью подвластны программисту, и никто извне их внезапно менять не может.`,1),Ta=v(`<!>, <!>, <!>, <!>, <!> (accumulator) &mdash; результат арифметических операций,<br/> <!>, <!>, <!>, <!>, <!> (counter) &mdash; счётчик цикла,<br/> <!>, <!>, <!>, <!>, <!> (data) &mdash; общие данные, результаты операций, вывода,<br/> <!>, <!>, <!>, <!>, <!> (base) &mdash; указатель на данные и элементы структур данных,<br/> <!>, <!>, <!>, <!> (stack pointer) &mdash; указатель на вершину стека,<br/> <!>, <!>, <!>, <!> (base pointer) &mdash; указатель на базу стека внутри функции,<br/> <!>, <!>, <!>, <!> (source index) &mdash; указатель на источник при операциях с массивами,<br/> <!>, <!>, <!>, <!> (destination index) &mdash; указатель на место назначения при операциях с массивами;<br/> <!> &ndash; <!> &mdash;
    регистры общего назначения, существующие только в <!>-битных процессорах.
    Рекомендуемого применения не имеют.
    Младшие <!> бита получаются добавлением суффикса <!>,
    например <!>;
    младшие <!> бит получаются добавлением суффикса <!>,
    например <!>;
    младшие <!> бит получаются добавлением суффикса <!>,
    например <!>.`,1),ja=v(`<b>Регистры состояния и управления</b> &mdash; регистры, хранящие состояние процессора и исполняемой программы.
    Могут меняться после выполнения операций.`,1),ka=v(`<!>, <!>, <!> (instruction pointer) &mdash; указатель на следующую инструкцию для выполнения.
    Изменяется инструкциями перехода, такими как <!>, <!>, <!>,
    а также любыми из производными, в частности, условными переходами.`,1),za=v("<!>, <!>, <!> &mdash; флаги, отражающие текущее состояние процессора.",1),Aa=v("<!> <!> <!> <!> <!>",1),Ba=v(`<!> (carry flag) &mdash; флаг переноса.
    Устанавливается в <!>,
    если произошёл перенос из старшего бита при сложении
    или заём в старший бит  при вычитании.`,1),Da=v(`Например,
    в регистре <!> находится число <!>,
    и мы прибавляем к нему число <!> с помощью инструкции <!>.
    Результат <!> не помещается в один байт <!>,
    поэтому он будет усечён до <!>, и, поскольку при сложении произошёл перенос,
    флаг <!>, будет установлен в <!>.`,1),Oa=v("<!> <!>",1),Za=v(`<!> (parity flag) &mdash; флаг чётности.
    Устанавливается в <!>, если младший байт результата содержит четное количество установленных битов.
    Раньше использовался при проверке целостности данных, сейчас используется очень редко.`,1),qa=v(`<!> (auxiliary carry flag) &mdash; вспомогательный флаг переноса.
    Устанавливается в <!>, если произошел перенос из младшего ниббла в старший ниббл.
    Используется для работы с двоично-десятичной арифметикой (BCD), напрямую редко используется.`,1),Ea=v(`<!> (zero flag) &mdash; флаг нуля.
    Устанавливается в <!>, если результат последней операции равен <!>.`,1),Ga=v(`<!> (sign flag) &mdash; флаг знака.
    Равен значению старшего бита результата: <!>, если результат отрицательный; и <!>, если результат положительный.`,1),Ia=v(`<!> (overflow flag) &mdash; флаг переполнения.
    Устанавливается в <!>, если произошло переполнение со знаком,
    а точнее, когда переполняется бит, следующий за старшим (знаковым) битом.`,1),Ja=v("<!> <!> <!> <!> <!>",1),Ka=v("<!> <!> <!> <!> <!> <!> <!> <!>",1);function dr(Fa){var S=Ka(),H=l(S);Sa(H,{title:"Регистры и память"});var M=a(H,2);Pa(M,{children:(u,F)=>{g();var m=w("Регистры");s(u,m)}});var T=a(M,2);y(T,{children:(u,F)=>{i(u,{children:(m,b)=>{var $=Ha(),p=a(l($),2);_(p,{m:"1"});var f=a(p,2);_(f,{m:"0.2"});var h=a(f,2);_(h,{m:"0.3"}),g(),s(m,$)}})}});var j=a(T,2);wa(j,{children:(u,F)=>{g();var m=w("Группы регистров");s(u,m)}});var k=a(j,2);y(k,{children:(u,F)=>{var m=Aa(),b=l(m);i(b,{children:(o,c)=>{var e=Ma();g(),s(o,e)}});var $=a(b,2);i($,{children:(o,c)=>{var e=Ta(),n=l(e);r(n,{language:"asm",c:"rax"});var d=a(n,2);r(d,{language:"asm",c:"eax"});var t=a(d,2);r(t,{language:"asm",c:"ax"});var x=a(t,2);r(x,{language:"asm",c:"al"});var P=a(x,2);r(P,{language:"asm",c:"ah"});var C=a(P,4);r(C,{language:"asm",c:"rcx"});var B=a(C,2);r(B,{language:"asm",c:"ecx"});var D=a(B,2);r(D,{language:"asm",c:"cx"});var O=a(D,2);r(O,{language:"asm",c:"cl"});var Z=a(O,2);r(Z,{language:"asm",c:"ch"});var q=a(Z,4);r(q,{language:"asm",c:"rdx"});var E=a(q,2);r(E,{language:"asm",c:"edx"});var G=a(E,2);r(G,{language:"asm",c:"dx"});var I=a(G,2);r(I,{language:"asm",c:"dl"});var J=a(I,2);r(J,{language:"asm",c:"dh"});var K=a(J,4);r(K,{language:"asm",c:"rbx"});var L=a(K,2);r(L,{language:"asm",c:"ebx"});var N=a(L,2);r(N,{language:"asm",c:"bx"});var Q=a(N,2);r(Q,{language:"asm",c:"bl"});var R=a(Q,2);r(R,{language:"asm",c:"bh"});var U=a(R,4);r(U,{language:"asm",c:"rsp"});var V=a(U,2);r(V,{language:"asm",c:"esp"});var W=a(V,2);r(W,{language:"asm",c:"sp"});var X=a(W,2);r(X,{language:"asm",c:"spl"});var Y=a(X,4);r(Y,{language:"asm",c:"rbp"});var aa=a(Y,2);r(aa,{language:"asm",c:"ebp"});var ra=a(aa,2);r(ra,{language:"asm",c:"bp"});var ea=a(ra,2);r(ea,{language:"asm",c:"bpl"});var na=a(ea,4);r(na,{language:"asm",c:"rsi"});var oa=a(na,2);r(oa,{language:"asm",c:"esi"});var da=a(oa,2);r(da,{language:"asm",c:"si"});var sa=a(da,2);r(sa,{language:"asm",c:"sil"});var ga=a(sa,4);r(ga,{language:"asm",c:"rdi"});var va=a(ga,2);r(va,{language:"asm",c:"edi"});var ma=a(va,2);r(ma,{language:"asm",c:"di"});var _a=a(ma,2);r(_a,{language:"asm",c:"dil"});var la=a(_a,4);r(la,{language:"asm",c:"r8"});var ca=a(la,2);r(ca,{language:"asm",c:"r15"});var ta=a(ca,2);_(ta,{m:"64"});var ua=a(ta,2);_(ua,{m:"32"});var ia=a(ua,2);r(ia,{c:"d"});var pa=a(ia,2);r(pa,{language:"asm",c:"r10d"});var ha=a(pa,2);_(ha,{m:"16"});var $a=a(ha,2);r($a,{c:"w"});var fa=a($a,2);r(fa,{language:"asm",c:"r10w"});var ba=a(fa,2);_(ba,{m:"8"});var xa=a(ba,2);r(xa,{c:"b"});var ya=a(xa,2);r(ya,{language:"asm",c:"r10b"}),g(),s(o,e)}});var p=a($,2);i(p,{children:(o,c)=>{var e=ja();g(),s(o,e)}});var f=a(p,2);i(f,{children:(o,c)=>{var e=ka(),n=l(e);r(n,{language:"asm",c:"rip"});var d=a(n,2);r(d,{language:"asm",c:"eip"});var t=a(d,2);r(t,{language:"asm",c:"ip"});var x=a(t,2);r(x,{language:"asm",c:"jmp"});var P=a(x,2);r(P,{language:"asm",c:"call"});var C=a(P,2);r(C,{language:"asm",c:"ret"}),g(),s(o,e)}});var h=a(f,2);i(h,{children:(o,c)=>{var e=za(),n=l(e);r(n,{language:"asm",c:"rflags"});var d=a(n,2);r(d,{language:"asm",c:"eflags"});var t=a(d,2);r(t,{language:"asm",c:"flags"}),g(),s(o,e)}}),s(u,m)}});var z=a(k,2);Pa(z,{children:(u,F)=>{g();var m=w("Флаги");s(u,m)}});var A=a(z,2);y(A,{children:(u,F)=>{var m=Oa(),b=l(m);i(b,{children:(p,f)=>{var h=Ba(),o=l(h);r(o,{language:"asm",c:"CF"});var c=a(o,2);_(c,{m:"1"}),g(),s(p,h)}});var $=a(b,2);i($,{children:(p,f)=>{g();var h=Da(),o=a(l(h));r(o,{language:"asm",c:"al"});var c=a(o,2);r(c,{c:"0xFF"});var e=a(c,2);r(e,{c:"0x03"});var n=a(e,2);r(n,{language:"asm",c:"add al, 0x03"});var d=a(n,2);r(d,{c:"0xFF + 0x03 = 0x102"});var t=a(d,2);r(t,{language:"asm",c:"al"});var x=a(t,2);r(x,{c:"0x02"});var P=a(x,2);r(P,{language:"asm",c:"CF"});var C=a(P,2);_(C,{m:"1"}),g(),s(p,h)}}),s(u,m)}});var Ca=a(A,2);y(Ca,{children:(u,F)=>{var m=Ja(),b=l(m);i(b,{children:(o,c)=>{var e=Za(),n=l(e);r(n,{language:"asm",c:"PF"});var d=a(n,2);_(d,{m:"1"}),g(),s(o,e)}});var $=a(b,2);i($,{children:(o,c)=>{var e=qa(),n=l(e);r(n,{language:"asm",c:"AF"});var d=a(n,2);_(d,{m:"1"}),g(),s(o,e)}});var p=a($,2);i(p,{children:(o,c)=>{var e=Ea(),n=l(e);r(n,{language:"asm",c:"ZF"});var d=a(n,2);_(d,{m:"1"});var t=a(d,2);_(t,{m:"0"}),g(),s(o,e)}});var f=a(p,2);i(f,{children:(o,c)=>{var e=Ga(),n=l(e);r(n,{language:"asm",c:"SF"});var d=a(n,2);_(d,{m:"1"});var t=a(d,2);_(t,{m:"0"}),g(),s(o,e)}});var h=a(f,2);i(h,{children:(o,c)=>{var e=Ia(),n=l(e);r(n,{language:"asm",c:"OF"});var d=a(n,2);_(d,{m:"1"}),g(),s(o,e)}}),s(u,m)}}),s(Fa,S)}export{dr as component};
