import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{f as _,a as $,b as r,s as m,n,t as l}from"../chunks/B1HoO4k0.js";import{T}from"../chunks/CcX1cm_-.js";import{P as h}from"../chunks/ClksMsit.js";import{P as s}from"../chunks/B8FEnsbH.js";/* empty css                *//* empty css                *//* empty css                */import"../chunks/i9XClpbl.js";/* empty css                *//* empty css                *//* empty css                */import"../chunks/CYtJBVty.js";/* empty css                *//* empty css                */var u=_(`Мы хотим научиться массово обновлять <b>все</b> элементы.
        Например, если это множество чисел, мы можем, например, захотеть прибавлять ко всем элементам какое-то число.`,1),j=_("<!> <!> <!>",1),k=_("<!> <!>",1),q=_("<!> <!> <!>",1);function N(x){var f=q(),c=$(f);T(c,{title:"Венецианская техника"});var P=m(c,2);h(P,{children:(d,b)=>{var a=j(),e=$(a);s(e,{children:(o,t)=>{n();var p=l(`Пусть у нас есть какая-то структура данных, представляющая собой прокаченное (мульти)множество.
        То есть это (мульти)множество поддерживает еще какие-то хорошие операции, типа получение минимального элемента.
        Сама структура данных и эти операции могут быть практически любыми.`);r(o,p)}});var v=m(e,2);s(v,{children:(o,t)=>{n();var p=u();n(2),r(o,p)}});var i=m(v,2);s(i,{children:(o,t)=>{n();var p=l(`Можно тупо выполнять эти операции над каждыми элементами. Долго и неэффективно.
        Для некоторых широко распространенных структур данных существуют мощные модификации,
        позволяющие выполнять массовые операции.
        А можно использовать общую Венецианскую технику, применимую для любых структур.`);r(o,p)}}),r(d,a)}});var g=m(P,2);h(g,{children:(d,b)=>{var a=k(),e=$(a);s(e,{children:(i,o)=>{n();var t=l(`Основная идея — вместо реальных массовых изменений всех элементов
        хранить эти массовые изменения отдельно, не трогая сами элементы.
        Когда нужно получить значение элемента,
        мы просто применим все хранящиеся массовые изменения к этому элементу.`);r(i,t)}});var v=m(e,2);s(v,{children:(i,o)=>{n();var t=l(`Отсюда возникает основное требование к массовым изменениям:
        они должны коммутировать со всеми другими изменениями, которые могут происходить с элементами.
        А еще, если нужно накапливать несколько массовых изменений, дополнительно нужно,
        чтобы композиция массовых изменений была ассоциативна.`);r(i,t)}}),r(d,a)}}),r(x,f)}export{N as component};
