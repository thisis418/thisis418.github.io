import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{f as n,a as v,b as t,s as r,n as m,t as L}from"../chunks/B1HoO4k0.js";import{T}from"../chunks/CcX1cm_-.js";import{P as k}from"../chunks/ClksMsit.js";import{P}from"../chunks/B8FEnsbH.js";/* empty css                *//* empty css                *//* empty css                */import"../chunks/i9XClpbl.js";/* empty css                *//* empty css                *//* empty css                */import{M as p}from"../chunks/e5qaD0UW.js";import{B as W}from"../chunks/Dv4xhkGP.js";import{L as u}from"../chunks/_RU5sT8R.js";/* empty css                */var I=n("<b>Дерево Буркхарда&ndash;Келлера</b> &mdash; метрическое дерево, поддерживающее операции",1),j=n("<!> <!>",1),q=n("<!> <!>",1),y=n("Пусть нам нужно хранить набор <!> из <!> элементов.",1),z=n(`Построим дерево.
    Корень будет хранить в себе любой элемент.
    В <!>-м поддереве узла с элементом <!> будут храниться только такие элементы <!>, для которых <!>.`,1),A=n("<!> <!>",1),C=n("<!> <!> <!>",1);function rr(w){var g=C(),x=v(g);T(x,{title:"Дерево Буркхарда–Келлера"});var b=r(x,2);k(b,{children:(l,M)=>{var _=q(),d=v(_);P(d,{children:(e,$)=>{var o=I();m(),t(e,o)}});var f=r(d,2);W(f,{children:(e,$)=>{var o=j(),a=v(o);u(a,{children:(i,h)=>{m();var c=L("добавить строку");t(i,c)}});var s=r(a,2);u(s,{children:(i,h)=>{m();var c=L("найти близкие строки");t(i,c)}}),t(e,o)}}),t(l,_)}});var B=r(b,2);k(B,{children:(l,M)=>{var _=A(),d=v(_);P(d,{children:(e,$)=>{m();var o=y(),a=r(v(o));p(a,{m:"W"});var s=r(a,2);p(s,{m:"n = |W|"}),m(),t(e,o)}});var f=r(d,2);P(f,{children:(e,$)=>{m();var o=z(),a=r(v(o));p(a,{m:"k"});var s=r(a,2);p(s,{m:"w"});var i=r(s,2);p(i,{m:"x"});var h=r(i,2);p(h,{m:"d(w, x) = k"}),m(),t(e,o)}}),t(l,_)}}),t(w,g)}export{rr as component};
