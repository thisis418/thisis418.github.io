import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{f as _,a as c,b as d,s as a,n as m,t as y}from"../chunks/B1HoO4k0.js";import{H as X}from"../chunks/VyKLllFE.js";/* empty css                *//* empty css                */import{P as x}from"../chunks/B8FEnsbH.js";import{M as p}from"../chunks/e5qaD0UW.js";import{C as Y}from"../chunks/DunPP-_K.js";import{S as q}from"../chunks/D2QCM4hc.js";import{P as b}from"../chunks/ClksMsit.js";import{T as ea}from"../chunks/CcX1cm_-.js";import{C as r}from"../chunks/0Rd6UPhr.js";var oa=_("Инструкция <!> выполняет сложение двух операндов.",1),sa=_(`Синтаксис <!>.
    Эквивалентно присваиванию <!>.`,1),ma=_("<!> <!>",1),na=_("Инструкция <!> выполняет вычитание двух операндов.",1),ta=_(`Синтаксис <!>.
    Эквивалентно присваиванию <!>.`,1),da=_("<!> <!>",1),la=_(`Операндами могут являться регистры, переменные, константы, а также захардкоженные значения.
    При этом захардкоженные значения не могут быть больше <!> битов,
    даже если первый операнд имеет размер в <!> бита.`,1),va=_("Инструкция <!> увеличивает операнд на <!>.",1),ga=_(`Синтаксис <!>.
    Эквивалентно присваиванию <!>.`,1),ca=_("<!> <!>",1),_a=_("Инструкция <!> уменьшает операнд на <!>.",1),ia=_(`Синтаксис <!>.
    Эквивалентно присваиванию <!>.`,1),ha=_("<!> <!>",1),ua=_(`Инструкции <!> и <!> выполняют умножение двух операндов.
    Инструкция <!> выполняет беззнаковое умножение,
    а инструкция <!> выполняет умножение со знаком.`,1),$a=_(`Для <!> есть три формата: однооперандный, двухоперандный и трехоперандный.
    Для <!> допустим только однооперандный формат.`,1),Ca=_("<!> <!>",1),xa=_(`Однооперандный формат <!> умножает регистр <!> на операнд <!>,
    при этом старшие разряды результата помещаются в регистр <!>,
    а младшие разряды результата помещаются в регистр <!>.`,1),pa=_("<!> &mdash; <!>;<br/> <!> &mdash; <!>;<br/> <!> &mdash; <!>;<br/> <!> &mdash; <!>.",1),fa=_("<!> <!>",1),Pa=_(`Двухоперандный формат <!> выполняет умножение <!>.
    Результат усекается до размера операнда-приёмника <!>.
    Если произошло переполнение,
    то будут установлены флаги <!> и <!>.`,1),ba=_("<!> &mdash; <!>;<br/> <!> &mdash; <!>;<br/> <!> &mdash; <!>.",1),ya=_("<!> <!>",1),wa=_(`Трехоперандный формат <!> выполняет умножение <!>.
    Результат усекается до размера операнда-приёмника <!>.
    Если произошло переполнение,
    то будут установлены флаги <!> и <!>.\``,1),qa=_("<!> &mdash; <!>;<br/> <!> &mdash; <!>;<br/> <!> &mdash; <!>.",1),Fa=_(`Константа, на которую происходит умножение, не может иметь размер больше <!> бит.
    В случае, если операнд-приемник имеет размер <!> бита,
    константа будет расширена с сохранением знака до размера <!> бита.`,1),Ha=_("<!> <!> <!>",1),Ma=_(`Инструкции <!> и <!> выполняют деление двух операндов.
    Инструкция <!> выполняет беззнаковое деление,
    а инструкция <!> выполняет деление со знаком.`,1),Oa=_("<!> <!>",1),Sa=_(`Однооперандный формат <!> делит регистры <!> на операнд <!>,
    при этом частное от деления помещается в регистр <!>,
    а остаток от деления помещается в регистр <!>.`,1),Ta=_("<!> &mdash; <!>;<br/> <!> &mdash; <!>, и <!>;<br/> <!> &mdash; <!>, и <!>;<br/> <!> &mdash; <!>, и <!>.",1),ka=_("<!> <!>",1),ja=_(`Перед выполнением деления нужно подготовить делимое.
    Для беззнакового деления достаточно просто загрузить делимое в <!> и обнулить <!>.
    Для деления со знаком нужно расширить <!> со знаком в <!>.
    Расширение можно сделать с помощью соответствующих инструкций <!>, <!>, <!>, <!>, <!> и <!>.`,1),za=_(`Инструкция <!> (convert byte to word)
    превращает байт <!> в слово <!> через расширение со знаком.`,1),Aa=_(`Инструкция <!> (convert word to double word)
    превращает слово <!> в двойное слово <!> через расширение со знаком.`,1),Ba=_(`Инструкция <!> (convert word to double word by extention)
    превращает слово <!> в двойное слово <!> через расширение со знаком.`,1),Da=_(`Инструкция <!> (convert double word to quad word)
    превращает двойное слово <!> в четверное слово <!> через расширение со знаком.`,1),Ea=_(`Инструкция <!> (convert double word to quad word by extention)
    превращает двойное слово <!> в четверное слово <!> через расширение со знаком.`,1),Ga=_(`Инструкция <!> (convert quad word to oct word)
    превращает четверное слово <!> в восьмерное слово <!> через расширение со знаком.`,1),Ia=_("<!> <!> <!> <!> <!> <!>",1),Ja=_("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1);function er(Z){var F=Ja(),H=c(F);ea(H,{title:"Арифметика"});var M=a(H,2);X(M,{children:(i,P)=>{m();var t=y("Целочисленная арифметика");d(i,t)}});var O=a(M,2);q(O,{children:(i,P)=>{m();var t=y("Сложение и вычитание");d(i,t)}});var S=a(O,2);b(S,{children:(i,P)=>{var t=ma(),h=c(t);x(h,{children:(l,C)=>{m();var o=oa(),e=a(c(o));r(e,{language:"asm",c:"add"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=sa(),e=a(c(o));r(e,{language:"asm",c:"add destination, source"});var s=a(e,2);r(s,{c:"destination += source"}),m(),d(l,o)}}),d(i,t)}});var T=a(S,2);b(T,{children:(i,P)=>{var t=da(),h=c(t);x(h,{children:(l,C)=>{m();var o=na(),e=a(c(o));r(e,{language:"asm",c:"sub"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=ta(),e=a(c(o));r(e,{language:"asm",c:"sub destination, source"});var s=a(e,2);r(s,{c:"destination -= source"}),m(),d(l,o)}}),d(i,t)}});var k=a(T,2);b(k,{children:(i,P)=>{x(i,{children:(t,h)=>{m();var $=la(),l=a(c($));p(l,{m:"32"});var C=a(l,2);p(C,{m:"64"}),m(),d(t,$)}})}});var j=a(k,2);Y(j,{language:"asm",code:`
mov rax, 5
mov rdx, 2
add rax, rdx  ; rax = rax + rdx
mov rdx, 3
sub rax, rdx  ; rax = rax - rdx
ret
`});var z=a(j,2);b(z,{children:(i,P)=>{var t=ca(),h=c(t);x(h,{children:(l,C)=>{m();var o=va(),e=a(c(o));r(e,{language:"asm",c:"inc"});var s=a(e,2);p(s,{m:"1"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=ga(),e=a(c(o));r(e,{language:"asm",c:"inc destination"});var s=a(e,2);r(s,{c:"destination += 1"}),m(),d(l,o)}}),d(i,t)}});var A=a(z,2);b(A,{children:(i,P)=>{var t=ha(),h=c(t);x(h,{children:(l,C)=>{m();var o=_a(),e=a(c(o));r(e,{language:"asm",c:"dec"});var s=a(e,2);p(s,{m:"1"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=ia(),e=a(c(o));r(e,{language:"asm",c:"dec destination"});var s=a(e,2);r(s,{c:"destination -= 1"}),m(),d(l,o)}}),d(i,t)}});var B=a(A,2);Y(B,{language:"asm",code:`
mov rax, 5
mov rdx, 2
inc rax      ; rax = rax + 1
dec rdx      ; rdx = rdx - 1
ret
`});var D=a(B,2);q(D,{children:(i,P)=>{m();var t=y("Умножение");d(i,t)}});var E=a(D,2);b(E,{children:(i,P)=>{var t=Ca(),h=c(t);x(h,{children:(l,C)=>{m();var o=ua(),e=a(c(o));r(e,{language:"asm",c:"mul"});var s=a(e,2);r(s,{language:"asm",c:"imul"});var v=a(s,2);r(v,{language:"asm",c:"mul"});var n=a(v,2);r(n,{language:"asm",c:"imul"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=$a(),e=a(c(o));r(e,{language:"asm",c:"imul"});var s=a(e,2);r(s,{language:"asm",c:"mul"}),m(),d(l,o)}}),d(i,t)}});var G=a(E,2);b(G,{children:(i,P)=>{var t=fa(),h=c(t);x(h,{children:(l,C)=>{m();var o=xa(),e=a(c(o));r(e,{language:"asm",c:"mul/imul source"});var s=a(e,2);r(s,{language:"asm",c:"ax"});var v=a(s,2);r(v,{c:"source"});var n=a(v,2);r(n,{language:"asm",c:"dx"});var g=a(n,2);r(g,{language:"asm",c:"ax"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{var o=pa(),e=c(o);r(e,{language:"asm",c:"mul/imul r8/m8"});var s=a(e,2);p(s,{m:"\\code{\\htmlClass{register}{ax}} = \\code{\\htmlClass{register}{al}} \\cdot \\code{\\htmlClass{register}{r8}/\\htmlClass{memory}{m8}}"});var v=a(s,4);r(v,{language:"asm",c:"mul/imul r16/m16"});var n=a(v,2);p(n,{m:"\\code{\\htmlClass{register}{dx}:\\htmlClass{register}{ax}} = \\code{\\htmlClass{register}{ax}} \\cdot \\code{\\htmlClass{register}{r16}/\\htmlClass{memory}{m16}}"});var g=a(n,4);r(g,{language:"asm",c:"mul/imul r32/m32"});var u=a(g,2);p(u,{m:"\\code{\\htmlClass{register}{edx}:\\htmlClass{register}{eax}} = \\code{\\htmlClass{register}{eax}} \\cdot \\code{\\htmlClass{register}{r32}/\\htmlClass{memory}{m32}}"});var f=a(u,4);r(f,{language:"asm",c:"mul/imul r64/m64"});var w=a(f,2);p(w,{m:"\\code{\\htmlClass{register}{rdx}:\\htmlClass{register}{rax}} = \\code{\\htmlClass{register}{rax}} \\cdot \\code{\\htmlClass{register}{r64}/\\htmlClass{memory}{m64}}"}),m(),d(l,o)}}),d(i,t)}});var I=a(G,2);b(I,{children:(i,P)=>{var t=ya(),h=c(t);x(h,{children:(l,C)=>{m();var o=Pa(),e=a(c(o));r(e,{language:"asm",c:"imul destination, source"});var s=a(e,2);r(s,{c:"destination *= source"});var v=a(s,2);r(v,{c:"destination"});var n=a(v,2);r(n,{language:"asm",c:"CF"});var g=a(n,2);r(g,{language:"asm",c:"OF"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{var o=ba(),e=c(o);r(e,{language:"asm",c:"imul r16 r16/m16"});var s=a(e,2);p(s,{m:"\\code{\\htmlClass{register}{r16}} = \\code{\\htmlClass{register}{r16}} \\cdot \\code{\\htmlClass{register}{r16}/\\htmlClass{memory}{m16}}"});var v=a(s,4);r(v,{language:"asm",c:"imul r32 r32/m32"});var n=a(v,2);p(n,{m:"\\code{\\htmlClass{register}{r32}} = \\code{\\htmlClass{register}{r32}} \\cdot \\code{\\htmlClass{register}{r32}/\\htmlClass{memory}{m32}}"});var g=a(n,4);r(g,{language:"asm",c:"imul r64 r64/m64"});var u=a(g,2);p(u,{m:"\\code{\\htmlClass{register}{r64}} = \\code{\\htmlClass{register}{r64}} \\cdot \\code{\\htmlClass{register}{r64}/\\htmlClass{memory}{m64}}"}),m(),d(l,o)}}),d(i,t)}});var J=a(I,2);b(J,{children:(i,P)=>{var t=Ha(),h=c(t);x(h,{children:(C,o)=>{m();var e=wa(),s=a(c(e));r(s,{language:"asm",c:"imul destination, source, immediate"});var v=a(s,2);r(v,{c:"destination = source * immediate"});var n=a(v,2);r(n,{c:"destination"});var g=a(n,2);r(g,{language:"asm",c:"CF"});var u=a(g,2);r(u,{language:"asm",c:"OF"}),m(),d(C,e)}});var $=a(h,2);x($,{children:(C,o)=>{var e=qa(),s=c(e);r(s,{language:"asm",c:"imul r16 r16/m16 imm8/imm16/imm32"});var v=a(s,2);p(v,{m:"\\code{\\htmlClass{register}{r16}} = \\code{\\htmlClass{register}{r16}/\\htmlClass{memory}{m16}} \\cdot \\code{\\htmlClass{constant}{imm8}/\\htmlClass{constant}{imm16}/\\htmlClass{constant}{imm32}}"});var n=a(v,4);r(n,{language:"asm",c:"imul r32 r32/m32 imm8/imm16/imm32"});var g=a(n,2);p(g,{m:"\\code{\\htmlClass{register}{r32}} = \\code{\\htmlClass{register}{r32}/\\htmlClass{memory}{m32}} \\cdot \\code{\\htmlClass{constant}{imm8}/\\htmlClass{constant}{imm16}/\\htmlClass{constant}{imm32}}"});var u=a(g,4);r(u,{language:"asm",c:"imul r64 r64/m64 imm8/imm16/imm32"});var f=a(u,2);p(f,{m:"\\code{\\htmlClass{register}{r64}} = \\code{\\htmlClass{register}{r64}/\\htmlClass{memory}{m64}} \\cdot \\code{\\htmlClass{constant}{imm8}/\\htmlClass{constant}{imm16}/\\htmlClass{constant}{imm32}}"}),m(),d(C,e)}});var l=a($,2);x(l,{children:(C,o)=>{m();var e=Fa(),s=a(c(e));p(s,{m:"32"});var v=a(s,2);p(v,{m:"64"});var n=a(v,2);p(n,{m:"64"}),m(),d(C,e)}}),d(i,t)}});var K=a(J,2);q(K,{children:(i,P)=>{m();var t=y("Деление");d(i,t)}});var L=a(K,2);b(L,{children:(i,P)=>{var t=Oa(),h=c(t);x(h,{children:(l,C)=>{m();var o=Ma(),e=a(c(o));r(e,{language:"asm",c:"div"});var s=a(e,2);r(s,{language:"asm",c:"idiv"});var v=a(s,2);r(v,{language:"asm",c:"div"});var n=a(v,2);r(n,{language:"asm",c:"idiv"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{m();var o=y("Для обоих инструкций допустим только однооперандный формат.");d(l,o)}}),d(i,t)}});var N=a(L,2);b(N,{children:(i,P)=>{var t=ka(),h=c(t);x(h,{children:(l,C)=>{m();var o=Sa(),e=a(c(o));r(e,{language:"asm",c:"mul/imul source"});var s=a(e,2);r(s,{language:"asm",c:"dx:ax"});var v=a(s,2);r(v,{c:"source"});var n=a(v,2);r(n,{language:"asm",c:"ax"});var g=a(n,2);r(g,{language:"asm",c:"dx"}),m(),d(l,o)}});var $=a(h,2);x($,{children:(l,C)=>{var o=Ta(),e=c(o);r(e,{language:"asm",c:"div/idiv r8/m8"});var s=a(e,2);p(s,{m:"\\code{\\htmlClass{register}{ax}} = \\code{\\htmlClass{register}{al}} \\cdot \\code{\\htmlClass{register}{r8}/\\htmlClass{memory}{m8}}"});var v=a(s,4);r(v,{language:"asm",c:"div/idiv r16/m16"});var n=a(v,2);p(n,{m:"\\code{\\htmlClass{register}{ax}} = \\code{\\htmlClass{register}{dx}:\\htmlClass{register}{ax}} / \\code{\\htmlClass{register}{r16}/\\htmlClass{memory}{m16}}"});var g=a(n,2);p(g,{m:"\\code{\\htmlClass{register}{dx}} = \\code{\\htmlClass{register}{dx}:\\htmlClass{register}{ax}} \\bmod \\code{\\htmlClass{register}{r16}/\\htmlClass{memory}{m16}}"});var u=a(g,4);r(u,{language:"asm",c:"div/idiv r32/m32"});var f=a(u,2);p(f,{m:"\\code{\\htmlClass{register}{eax}} = \\code{\\htmlClass{register}{edx}:\\htmlClass{register}{eax}} / \\code{\\htmlClass{register}{r32}/\\htmlClass{memory}{m32}}"});var w=a(f,2);p(w,{m:"\\code{\\htmlClass{register}{edx}} = \\code{\\htmlClass{register}{edx}:\\htmlClass{register}{eax}} \\bmod \\code{\\htmlClass{register}{r32}/\\htmlClass{memory}{m32}}"});var V=a(w,4);r(V,{language:"asm",c:"div/idiv r64/m64"});var W=a(V,2);p(W,{m:"\\code{\\htmlClass{register}{rax}} = \\code{\\htmlClass{register}{rdx}:\\htmlClass{register}{rax}} / \\code{\\htmlClass{register}{r64}/\\htmlClass{memory}{m64}}"});var ra=a(W,2);p(ra,{m:"\\code{\\htmlClass{register}{rdx}} = \\code{\\htmlClass{register}{rdx}:\\htmlClass{register}{rax}} \\bmod \\code{\\htmlClass{register}{r64}/\\htmlClass{memory}{m64}}"}),m(),d(l,o)}}),d(i,t)}});var Q=a(N,2);b(Q,{children:(i,P)=>{x(i,{children:(t,h)=>{m();var $=ja(),l=a(c($));r(l,{language:"asm",c:"ax"});var C=a(l,2);r(C,{language:"asm",c:"dx"});var o=a(C,2);r(o,{language:"asm",c:"ax"});var e=a(o,2);r(e,{language:"asm",c:"dx"});var s=a(e,2);r(s,{language:"asm",c:"cbw"});var v=a(s,2);r(v,{language:"asm",c:"cwd"});var n=a(v,2);r(n,{language:"asm",c:"cwde"});var g=a(n,2);r(g,{language:"asm",c:"cdq"});var u=a(g,2);r(u,{language:"asm",c:"cdqe"});var f=a(u,2);r(f,{language:"asm",c:"cqo"}),m(),d(t,$)}})}});var R=a(Q,2);X(R,{children:(i,P)=>{m();var t=y("Расширение");d(i,t)}});var U=a(R,2);b(U,{children:(i,P)=>{x(i,{children:(t,h)=>{m();var $=y("Операции производятся над числами разного размера, поэтому нужно уметь расширять числа до бо´льших размеров.");d(t,$)}})}});var aa=a(U,2);b(aa,{children:(i,P)=>{var t=Ia(),h=c(t);x(h,{children:(s,v)=>{m();var n=za(),g=a(c(n));r(g,{language:"asm",c:"cbw"});var u=a(g,2);r(u,{language:"asm",c:"al"});var f=a(u,2);r(f,{language:"asm",c:"ax"}),m(),d(s,n)}});var $=a(h,2);x($,{children:(s,v)=>{m();var n=Aa(),g=a(c(n));r(g,{language:"asm",c:"cwd"});var u=a(g,2);r(u,{language:"asm",c:"ax"});var f=a(u,2);r(f,{language:"asm",c:"dx:ax"}),m(),d(s,n)}});var l=a($,2);x(l,{children:(s,v)=>{m();var n=Ba(),g=a(c(n));r(g,{language:"asm",c:"cwde"});var u=a(g,2);r(u,{language:"asm",c:"ax"});var f=a(u,2);r(f,{language:"asm",c:"eax"}),m(),d(s,n)}});var C=a(l,2);x(C,{children:(s,v)=>{m();var n=Da(),g=a(c(n));r(g,{language:"asm",c:"cdq"});var u=a(g,2);r(u,{language:"asm",c:"eax"});var f=a(u,2);r(f,{language:"asm",c:"edx:eax"}),m(),d(s,n)}});var o=a(C,2);x(o,{children:(s,v)=>{m();var n=Ea(),g=a(c(n));r(g,{language:"asm",c:"cdqe"});var u=a(g,2);r(u,{language:"asm",c:"eax"});var f=a(u,2);r(f,{language:"asm",c:"rax"}),m(),d(s,n)}});var e=a(o,2);x(e,{children:(s,v)=>{m();var n=Ga(),g=a(c(n));r(g,{language:"asm",c:"cqo"});var u=a(g,2);r(u,{language:"asm",c:"rax"});var f=a(u,2);r(f,{language:"asm",c:"rdx:rax"}),m(),d(s,n)}}),d(i,t)}}),d(Z,F)}export{er as component};
